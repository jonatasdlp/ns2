/*
 * ConfPanel.java
 *
 * Created on 25 de Novembro de 2005, 10:59
 */

package gui;

/**
 *
 * @author  Helen Peters
 */
public class CommonNodeConfPanel extends javax.swing.JPanel {

    /** Creates new form ConfPanel */
    public CommonNodeConfPanel() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        commonNodeApplicationComboBox = new javax.swing.JComboBox();
        commonNodeNumberLabel = new javax.swing.JLabel();
        commonNodeNumberTextField = new javax.swing.JTextField();
        commonNodeLocationLabel = new javax.swing.JLabel();
        commonNodeEnergyLabel = new javax.swing.JLabel();
        commonNodeEnergyTextField = new javax.swing.JTextField();
        joulesLabel = new javax.swing.JLabel();
        commonNodeApplicationLabel = new javax.swing.JLabel();
        commonNodeLocationComboBox = new javax.swing.JComboBox();
        commonNodeTransmissionRangeLabel = new javax.swing.JLabel();
        commonNodeDissTypeLabel = new javax.swing.JLabel();
        commonNodeDissTypeComboBox = new javax.swing.JComboBox();
        secondsLabel = new javax.swing.JLabel();
        commonNodeDissIntervalTextField = new javax.swing.JTextField();
        commonNodeDissIntervalLabel = new javax.swing.JLabel();
        commonNodeApplicationLabel1 = new javax.swing.JLabel();
        commonNodeProcessingTypeComboBox = new javax.swing.JComboBox();
        commonNodeDissTypeLabel1 = new javax.swing.JLabel();
        commonNodeDissIntervalLabel1 = new javax.swing.JLabel();
        commonNodeSensingTypeComboBox = new javax.swing.JComboBox();
        commonNodeSensingIntervalTextField = new javax.swing.JTextField();
        secondsLabel1 = new javax.swing.JLabel();
        dataGeneratorTypeLabel = new javax.swing.JLabel();
        dataGeneratorTypeComboBox = new javax.swing.JComboBox();
        deviationLabel = new javax.swing.JLabel();
        averageDataLabel = new javax.swing.JLabel();
        maxDataLabel = new javax.swing.JLabel();
        dataAverageTextField = new javax.swing.JTextField();
        deviationTextField = new javax.swing.JTextField();
        maxDataTextField = new javax.swing.JTextField();
        metersLabel = new javax.swing.JLabel();
        commonNodeTransmissionRangeTextField = new javax.swing.JTextField();

        setLayout(null);

        setBackground(new java.awt.Color(240, 238, 231));
        commonNodeApplicationComboBox.setFont(new java.awt.Font("Arial", 0, 11));
        commonNodeApplicationComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Application/ComonNodeApplication" }));
        commonNodeApplicationComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                commonNodeApplicationComboBoxActionPerformed(evt);
            }
        });

        add(commonNodeApplicationComboBox);
        commonNodeApplicationComboBox.setBounds(210, 140, 270, 22);

        commonNodeNumberLabel.setFont(new java.awt.Font("Arial", 0, 11));
        commonNodeNumberLabel.setText("COMMON NODE  NUMBER: ");
        add(commonNodeNumberLabel);
        commonNodeNumberLabel.setBounds(20, 20, 131, 14);

        commonNodeNumberTextField.setFont(new java.awt.Font("Arial", 0, 11));
        commonNodeNumberTextField.setText("1");
        commonNodeNumberTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                commonNodeNumberTextFieldActionPerformed(evt);
            }
        });
        commonNodeNumberTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                commonNodeNumberTextFieldFocusLost(evt);
            }
        });

        add(commonNodeNumberTextField);
        commonNodeNumberTextField.setBounds(210, 20, 250, 19);

        commonNodeLocationLabel.setFont(new java.awt.Font("Arial", 0, 11));
        commonNodeLocationLabel.setText("COMMON NODE  LOCATION:");
        add(commonNodeLocationLabel);
        commonNodeLocationLabel.setBounds(20, 60, 138, 14);

        commonNodeEnergyLabel.setFont(new java.awt.Font("Arial", 0, 11));
        commonNodeEnergyLabel.setText("INITIAL ENERGY:");
        add(commonNodeEnergyLabel);
        commonNodeEnergyLabel.setBounds(20, 100, 81, 14);

        commonNodeEnergyTextField.setFont(new java.awt.Font("Arial", 0, 11));
        commonNodeEnergyTextField.setText("1000");
        commonNodeEnergyTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                commonNodeEnergyTextFieldActionPerformed(evt);
            }
        });
        commonNodeEnergyTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                commonNodeEnergyTextFieldFocusLost(evt);
            }
        });

        add(commonNodeEnergyTextField);
        commonNodeEnergyTextField.setBounds(210, 100, 220, 19);

        joulesLabel.setFont(new java.awt.Font("Arial", 0, 11));
        joulesLabel.setText("Joules");
        add(joulesLabel);
        joulesLabel.setBounds(450, 100, 40, 20);

        commonNodeApplicationLabel.setFont(new java.awt.Font("Arial", 0, 11));
        commonNodeApplicationLabel.setText("COMMON NODE   APPLICATION:");
        add(commonNodeApplicationLabel);
        commonNodeApplicationLabel.setBounds(20, 140, 155, 14);

        commonNodeLocationComboBox.setFont(new java.awt.Font("Arial", 0, 11));
        commonNodeLocationComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "RANDOM", "GRID" }));
        commonNodeLocationComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                commonNodeLocationComboBoxActionPerformed(evt);
            }
        });

        add(commonNodeLocationComboBox);
        commonNodeLocationComboBox.setBounds(210, 60, 270, 22);

        commonNodeTransmissionRangeLabel.setFont(new java.awt.Font("Arial", 0, 11));
        commonNodeTransmissionRangeLabel.setText("TRANSMISSION RANGE:");
        add(commonNodeTransmissionRangeLabel);
        commonNodeTransmissionRangeLabel.setBounds(20, 220, 118, 14);

        commonNodeDissTypeLabel.setFont(new java.awt.Font("Arial", 0, 11));
        commonNodeDissTypeLabel.setText("DISSEMINATION TYPE: ");
        add(commonNodeDissTypeLabel);
        commonNodeDissTypeLabel.setBounds(20, 260, 112, 14);

        commonNodeDissTypeComboBox.setFont(new java.awt.Font("Arial", 0, 11));
        commonNodeDissTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Continuous", "Programmed", "On Demand" }));
        commonNodeDissTypeComboBox.setSelectedIndex(1);
        commonNodeDissTypeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                commonNodeDissTypeComboBoxActionPerformed(evt);
            }
        });

        add(commonNodeDissTypeComboBox);
        commonNodeDissTypeComboBox.setBounds(210, 260, 270, 22);

        secondsLabel.setFont(new java.awt.Font("Arial", 0, 11));
        secondsLabel.setText("seconds");
        add(secondsLabel);
        secondsLabel.setBounds(440, 300, 50, 14);

        commonNodeDissIntervalTextField.setFont(new java.awt.Font("Arial", 0, 11));
        commonNodeDissIntervalTextField.setText("20");
        commonNodeDissIntervalTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                commonNodeDissIntervalTextFieldActionPerformed(evt);
            }
        });
        commonNodeDissIntervalTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                commonNodeDissIntervalTextFieldFocusLost(evt);
            }
        });

        add(commonNodeDissIntervalTextField);
        commonNodeDissIntervalTextField.setBounds(210, 300, 220, 19);

        commonNodeDissIntervalLabel.setFont(new java.awt.Font("Arial", 0, 11));
        commonNodeDissIntervalLabel.setText("DISSEMINATION INTERVAL:");
        add(commonNodeDissIntervalLabel);
        commonNodeDissIntervalLabel.setBounds(20, 300, 133, 14);

        commonNodeApplicationLabel1.setFont(new java.awt.Font("Arial", 0, 11));
        commonNodeApplicationLabel1.setText("PROCESSING TYPE:");
        add(commonNodeApplicationLabel1);
        commonNodeApplicationLabel1.setBounds(20, 180, 97, 14);

        commonNodeProcessingTypeComboBox.setFont(new java.awt.Font("Arial", 0, 11));
        commonNodeProcessingTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Processing/AggregateProcessing" }));
        commonNodeProcessingTypeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                commonNodeProcessingTypeComboBoxActionPerformed(evt);
            }
        });

        add(commonNodeProcessingTypeComboBox);
        commonNodeProcessingTypeComboBox.setBounds(210, 180, 270, 22);

        commonNodeDissTypeLabel1.setFont(new java.awt.Font("Arial", 0, 11));
        commonNodeDissTypeLabel1.setText("SENSING TYPE: ");
        add(commonNodeDissTypeLabel1);
        commonNodeDissTypeLabel1.setBounds(20, 340, 79, 14);

        commonNodeDissIntervalLabel1.setFont(new java.awt.Font("Arial", 0, 11));
        commonNodeDissIntervalLabel1.setText("SENSING INTERVAL:");
        add(commonNodeDissIntervalLabel1);
        commonNodeDissIntervalLabel1.setBounds(20, 380, 100, 14);

        commonNodeSensingTypeComboBox.setFont(new java.awt.Font("Arial", 0, 11));
        commonNodeSensingTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Continuous", "Programmed", "On Demand" }));
        commonNodeSensingTypeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                commonNodeSensingTypeComboBoxActionPerformed(evt);
            }
        });

        add(commonNodeSensingTypeComboBox);
        commonNodeSensingTypeComboBox.setBounds(210, 340, 270, 22);

        commonNodeSensingIntervalTextField.setFont(new java.awt.Font("Arial", 0, 11));
        commonNodeSensingIntervalTextField.setText("5");
        commonNodeSensingIntervalTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                commonNodeSensingIntervalTextFieldActionPerformed(evt);
            }
        });
        commonNodeSensingIntervalTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                commonNodeSensingIntervalTextFieldFocusLost(evt);
            }
        });

        add(commonNodeSensingIntervalTextField);
        commonNodeSensingIntervalTextField.setBounds(210, 380, 220, 19);

        secondsLabel1.setFont(new java.awt.Font("Arial", 0, 11));
        secondsLabel1.setText("seconds");
        add(secondsLabel1);
        secondsLabel1.setBounds(440, 380, 50, 20);

        dataGeneratorTypeLabel.setFont(new java.awt.Font("Arial", 0, 11));
        dataGeneratorTypeLabel.setText("DATA GENERATOR TYPE:");
        add(dataGeneratorTypeLabel);
        dataGeneratorTypeLabel.setBounds(20, 420, 127, 14);

        dataGeneratorTypeComboBox.setFont(new java.awt.Font("Arial", 0, 11));
        dataGeneratorTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "TemperatureDataGenerator", "CarbonMonoxideDataGenerator" }));
        dataGeneratorTypeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dataGeneratorTypeComboBoxActionPerformed(evt);
            }
        });

        add(dataGeneratorTypeComboBox);
        dataGeneratorTypeComboBox.setBounds(210, 420, 270, 22);

        deviationLabel.setFont(new java.awt.Font("Arial", 0, 11));
        deviationLabel.setText("DATA STANDARD DEVIATION:");
        add(deviationLabel);
        deviationLabel.setBounds(20, 500, 149, 14);

        averageDataLabel.setFont(new java.awt.Font("Arial", 0, 11));
        averageDataLabel.setText("DATA AVERAGE VALUE:");
        add(averageDataLabel);
        averageDataLabel.setBounds(20, 460, 124, 14);

        maxDataLabel.setFont(new java.awt.Font("Arial", 0, 11));
        maxDataLabel.setText("MAXIMUM DATA VALUE:");
        add(maxDataLabel);
        maxDataLabel.setBounds(20, 540, 121, 14);

        dataAverageTextField.setFont(new java.awt.Font("Arial", 0, 11));
        dataAverageTextField.setText("25");
        dataAverageTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dataAverageTextFieldActionPerformed(evt);
            }
        });
        dataAverageTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                dataAverageTextFieldFocusLost(evt);
            }
        });

        add(dataAverageTextField);
        dataAverageTextField.setBounds(210, 460, 270, 19);

        deviationTextField.setFont(new java.awt.Font("Arial", 0, 11));
        deviationTextField.setText("5");
        deviationTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deviationTextFieldActionPerformed(evt);
            }
        });
        deviationTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                deviationTextFieldFocusLost(evt);
            }
        });

        add(deviationTextField);
        deviationTextField.setBounds(210, 500, 270, 19);

        maxDataTextField.setFont(new java.awt.Font("Arial", 0, 11));
        maxDataTextField.setText("30");
        maxDataTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maxDataTextFieldActionPerformed(evt);
            }
        });
        maxDataTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                maxDataTextFieldFocusLost(evt);
            }
        });

        add(maxDataTextField);
        maxDataTextField.setBounds(210, 540, 270, 19);

        metersLabel.setFont(new java.awt.Font("Arial", 0, 11));
        metersLabel.setText("meters");
        add(metersLabel);
        metersLabel.setBounds(450, 220, 40, 20);

        commonNodeTransmissionRangeTextField.setFont(new java.awt.Font("Arial", 0, 11));
        commonNodeTransmissionRangeTextField.setText("50");
        commonNodeTransmissionRangeTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                commonNodeTransmissionRangeTextFieldActionPerformed(evt);
            }
        });
        commonNodeTransmissionRangeTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                commonNodeTransmissionRangeTextFieldFocusLost(evt);
            }
        });

        add(commonNodeTransmissionRangeTextField);
        commonNodeTransmissionRangeTextField.setBounds(210, 220, 220, 19);

    }// </editor-fold>//GEN-END:initComponents

    private void maxDataTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_maxDataTextFieldFocusLost
          javax.swing.JTextField textField = (javax.swing.JTextField) evt.getSource();
          String content = textField.getText();
          if (content.length() != 0) {
            try {
              double aux = Double.parseDouble(content);
              MainFrame.getTcl().setCommonNodeMaximumData(aux);
            } catch (NumberFormatException nfe) {
              textField.requestFocus();
            }
          }
    }//GEN-LAST:event_maxDataTextFieldFocusLost

    private void deviationTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_deviationTextFieldFocusLost
          javax.swing.JTextField textField = (javax.swing.JTextField) evt.getSource();
          String content = textField.getText();
          if (content.length() != 0) {
            try {
              double aux = Double.parseDouble(content);
              MainFrame.getTcl().setCommonNodeDataDeviation(aux);
            } catch (NumberFormatException nfe) {
              textField.requestFocus();
            }
          }
    }//GEN-LAST:event_deviationTextFieldFocusLost

    private void dataAverageTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dataAverageTextFieldFocusLost
          javax.swing.JTextField textField = (javax.swing.JTextField) evt.getSource();
          String content = textField.getText();
          if (content.length() != 0) {
            try {
              double aux = Double.parseDouble(content);
              MainFrame.getTcl().setCommonNodeDataAverage(aux);
            } catch (NumberFormatException nfe) {
              textField.requestFocus();
            }
          }
    }//GEN-LAST:event_dataAverageTextFieldFocusLost

    private void commonNodeSensingIntervalTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_commonNodeSensingIntervalTextFieldFocusLost
          javax.swing.JTextField textField = (javax.swing.JTextField) evt.getSource();
          String content = textField.getText();
          if (content.length() != 0) {
            try {
              double aux = Double.parseDouble(content);
              MainFrame.getTcl().setCommonNodeSensingInterval(aux);
            } catch (NumberFormatException nfe) {
              textField.requestFocus();
            }
          }
    }//GEN-LAST:event_commonNodeSensingIntervalTextFieldFocusLost

    private void commonNodeDissIntervalTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_commonNodeDissIntervalTextFieldFocusLost
          javax.swing.JTextField textField = (javax.swing.JTextField) evt.getSource();
          String content = textField.getText();
          if (content.length() != 0) {
            try {
              double aux = Double.parseDouble(content);
              MainFrame.getTcl().setCommonNodeDissInterval(aux);
            } catch (NumberFormatException nfe) {
              textField.requestFocus();
            }
          }
    }//GEN-LAST:event_commonNodeDissIntervalTextFieldFocusLost

    private void commonNodeTransmissionRangeTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_commonNodeTransmissionRangeTextFieldFocusLost
          javax.swing.JTextField textField = (javax.swing.JTextField) evt.getSource();
          String content = textField.getText();
          if (content.length() != 0) {
            try {
              double aux = Double.parseDouble(content);
              MainFrame.getTcl().setCommonNodeTransmissionRange(aux);
            } catch (NumberFormatException nfe) {
              textField.requestFocus();
            }
          }
    }//GEN-LAST:event_commonNodeTransmissionRangeTextFieldFocusLost

    private void commonNodeEnergyTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_commonNodeEnergyTextFieldFocusLost
          javax.swing.JTextField textField = (javax.swing.JTextField) evt.getSource();
          String content = textField.getText();
          if (content.length() != 0) {
            try {
              double aux = Double.parseDouble(content);
              MainFrame.getTcl().setCommonNodeEnergy(aux);
            } catch (NumberFormatException nfe) {
              textField.requestFocus();
            }
          }
    }//GEN-LAST:event_commonNodeEnergyTextFieldFocusLost

    private void commonNodeNumberTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_commonNodeNumberTextFieldFocusLost
          javax.swing.JTextField textField = (javax.swing.JTextField) evt.getSource();
          String content = textField.getText();
          if (content.length() != 0) {
            try {
              int aux = Integer.parseInt(content);
              MainFrame.getTcl().setCommonNodeNumber(aux);
            } catch (NumberFormatException nfe) {
              textField.requestFocus();
            }
          }
    }//GEN-LAST:event_commonNodeNumberTextFieldFocusLost

    private void commonNodeTransmissionRangeTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_commonNodeTransmissionRangeTextFieldActionPerformed

        double aux = 0;
        String s = commonNodeTransmissionRangeTextField.getText();
        if (s.length() != 0) {
            try {
                aux = Double.parseDouble(s);
                MainFrame.getTcl().setCommonNodeTransmissionRange(aux);
            } catch (NumberFormatException nfe) {
                getToolkit().beep();
                commonNodeTransmissionRangeTextField.requestFocus();
            }
        }          
        MainFrame.setXMLSaved(false);
    }//GEN-LAST:event_commonNodeTransmissionRangeTextFieldActionPerformed

    private void commonNodeNumberTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_commonNodeNumberTextFieldActionPerformed

        int aux = 0;
        String s = commonNodeNumberTextField.getText();
        if (s.length() != 0) {
            try {
                aux = Integer.parseInt(s);
                MainFrame.getTcl().setCommonNodeNumber(aux);
            } catch (NumberFormatException nfe) {
                getToolkit().beep();
                commonNodeNumberTextField.requestFocus();
            }
        }     
        MainFrame.setXMLSaved(false);
    }//GEN-LAST:event_commonNodeNumberTextFieldActionPerformed

    private void commonNodeLocationComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_commonNodeLocationComboBoxActionPerformed

        MainFrame.getTcl().setCommonNodeLocation((String) commonNodeLocationComboBox.getSelectedItem());
        MainFrame.setXMLSaved(false);
    }//GEN-LAST:event_commonNodeLocationComboBoxActionPerformed

    private void commonNodeEnergyTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_commonNodeEnergyTextFieldActionPerformed

        double aux = 0;
        String s = commonNodeEnergyTextField.getText();
        if (s.length() != 0) {
            try {
                aux = Double.parseDouble(s);
                MainFrame.getTcl().setCommonNodeEnergy(aux);
            } catch (NumberFormatException nfe) {
                getToolkit().beep();
                commonNodeEnergyTextField.requestFocus();
            }
        }        
        MainFrame.setXMLSaved(false);
    }//GEN-LAST:event_commonNodeEnergyTextFieldActionPerformed

    private void commonNodeApplicationComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_commonNodeApplicationComboBoxActionPerformed

        MainFrame.getTcl().setCommonNodeApplication((String) commonNodeApplicationComboBox.getSelectedItem());
        MainFrame.setXMLSaved(false);
    }//GEN-LAST:event_commonNodeApplicationComboBoxActionPerformed

    private void commonNodeProcessingTypeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_commonNodeProcessingTypeComboBoxActionPerformed

        MainFrame.getTcl().setCommonNodeProcessingType((String) commonNodeProcessingTypeComboBox.getSelectedItem());
        MainFrame.setXMLSaved(false);
    }//GEN-LAST:event_commonNodeProcessingTypeComboBoxActionPerformed

    private void commonNodeDissTypeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_commonNodeDissTypeComboBoxActionPerformed

        MainFrame.getTcl().setCommonNodeDissType((String) commonNodeDissTypeComboBox.getSelectedItem());        
        MainFrame.setXMLSaved(false);
    }//GEN-LAST:event_commonNodeDissTypeComboBoxActionPerformed

    private void commonNodeDissIntervalTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_commonNodeDissIntervalTextFieldActionPerformed

        double aux = 0;
        String s = commonNodeDissIntervalTextField.getText();
        if (s.length() != 0) {
            try {
                aux = Double.parseDouble(s);
                MainFrame.getTcl().setCommonNodeDissInterval(aux);
            } catch (NumberFormatException nfe) {
                getToolkit().beep();
                commonNodeDissIntervalTextField.requestFocus();
            }
        }           
        MainFrame.setXMLSaved(false);
    }//GEN-LAST:event_commonNodeDissIntervalTextFieldActionPerformed

    private void commonNodeSensingTypeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_commonNodeSensingTypeComboBoxActionPerformed

        MainFrame.getTcl().setCommonNodeSensingType((String) commonNodeSensingTypeComboBox.getSelectedItem());  
        MainFrame.setXMLSaved(false);
    }//GEN-LAST:event_commonNodeSensingTypeComboBoxActionPerformed

    private void commonNodeSensingIntervalTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_commonNodeSensingIntervalTextFieldActionPerformed

        double aux = 0;
        String s = commonNodeSensingIntervalTextField.getText();
        if (s.length() != 0) {
            try {
                aux = Double.parseDouble(s);
                MainFrame.getTcl().setCommonNodeSensingInterval(aux);
            } catch (NumberFormatException nfe) {
                getToolkit().beep();
                commonNodeSensingIntervalTextField.requestFocus();
            }
        }         
        MainFrame.setXMLSaved(false);
    }//GEN-LAST:event_commonNodeSensingIntervalTextFieldActionPerformed

    private void dataGeneratorTypeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dataGeneratorTypeComboBoxActionPerformed

        MainFrame.getTcl().setCommonNodeDataGeneratorType((String) dataGeneratorTypeComboBox.getSelectedItem());   
        MainFrame.setXMLSaved(false);
    }//GEN-LAST:event_dataGeneratorTypeComboBoxActionPerformed

    private void dataAverageTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dataAverageTextFieldActionPerformed

        double aux = 0;
        String s = dataAverageTextField.getText();
        if (s.length() != 0) {
            try {
                aux = Double.parseDouble(s);
                MainFrame.getTcl().setCommonNodeDataAverage(aux);
            } catch (NumberFormatException nfe) {
                getToolkit().beep();
                dataAverageTextField.requestFocus();
            }
        }         
        MainFrame.setXMLSaved(false);
    }//GEN-LAST:event_dataAverageTextFieldActionPerformed

    private void deviationTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deviationTextFieldActionPerformed

        double aux = 0;
        String s = deviationTextField.getText();
        if (s.length() != 0) {
            try {
                aux = Double.parseDouble(s);
                MainFrame.getTcl().setCommonNodeDataDeviation(aux);
            } catch (NumberFormatException nfe) {
                getToolkit().beep();
                deviationTextField.requestFocus();
            }
        } 
        MainFrame.setXMLSaved(false);
    }//GEN-LAST:event_deviationTextFieldActionPerformed

    private void maxDataTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maxDataTextFieldActionPerformed

        double aux = 0;
        String s = maxDataTextField.getText();
        if (s.length() != 0) {
            try {
                aux = Double.parseDouble(s);
                MainFrame.getTcl().setCommonNodeMaximumData(aux);
            } catch (NumberFormatException nfe) {
                getToolkit().beep();
                maxDataTextField.requestFocus();
            }
        } 
        MainFrame.setXMLSaved(false);
    }//GEN-LAST:event_maxDataTextFieldActionPerformed

    private void setCommonNodeTransmissionRangeTextField(String s){
        commonNodeTransmissionRangeTextField.setText(s); 
    }

    private void setCommonNodeNumberTextField(String s){
        commonNodeNumberTextField.setText(s);
    }

    private void setCommonNodeLocationComboBox(String s){
        commonNodeLocationComboBox.addItem(s);
        commonNodeLocationComboBox.setSelectedItem(s);
    }

    private void setCommonNodeEnergyTextField(String s){
        commonNodeEnergyTextField.setText(s);
    }

    private void setCommonNodeApplicationComboBox(String s){
        commonNodeApplicationComboBox.addItem(s);
        commonNodeApplicationComboBox.setSelectedItem(s);
    }

    private void setCommonNodeProcessingTypeComboBox(String s){
        commonNodeProcessingTypeComboBox.addItem(s);
        commonNodeProcessingTypeComboBox.setSelectedItem(s);
    }

    private void setCommonNodeDissTypeComboBox(String s){
        commonNodeDissTypeComboBox.addItem(s);
        commonNodeDissTypeComboBox.setSelectedItem(s);
    }

    private void setCommonNodeDissIntervalTextField(String s){
        commonNodeDissIntervalTextField.setText(s);
    }

    private void setCommonNodeSensingTypeComboBox(String s){
        commonNodeSensingTypeComboBox.addItem(s);
        commonNodeSensingTypeComboBox.setSelectedItem(s);
    }
   
    private void setCommonNodeSensingIntervalTextField(String s){
        commonNodeSensingIntervalTextField.setText(s);
    }

    private void setCommonNodeDataGeneratorTypeComboBox(String s){
        dataGeneratorTypeComboBox.addItem(s);
        dataGeneratorTypeComboBox.setSelectedItem(s);
    }

    private void setCommonNodeDataAverageTextField(String s){
        dataAverageTextField.setText(s);
    }

    private void setCommonNodeDeviationTextField(String s){
        deviationTextField.setText(s);
    }

    private void setCommonNodeMaxDataTextField(String s){
        maxDataTextField.setText(s);
    }
      
    
    public void updateFields(TclFields tcl){
        setCommonNodeTransmissionRangeTextField(String.valueOf(tcl.getCommonNodeTransmissionRange()));
        setCommonNodeNumberTextField(String.valueOf(tcl.getCommonNodeNumber()));
        setCommonNodeLocationComboBox(tcl.getCommonNodeLocation());
        setCommonNodeEnergyTextField(String.valueOf(tcl.getCommonNodeEnergy()));
        setCommonNodeApplicationComboBox(tcl.getCommonNodeApplication());
        setCommonNodeProcessingTypeComboBox(tcl.getCommonNodeProcessingType());
        setCommonNodeDissTypeComboBox(tcl.getCommonNodeDissType());
        setCommonNodeDissIntervalTextField(String.valueOf(tcl.getCommonNodeDissInterval()));
        setCommonNodeSensingTypeComboBox(tcl.getCommonNodeSensingType());
        setCommonNodeSensingIntervalTextField(String.valueOf(tcl.getCommonNodeSensingInterval()));
        setCommonNodeDataGeneratorTypeComboBox(String.valueOf(tcl.getCommonNodeDataGeneratorType()));
        setCommonNodeDataAverageTextField(String.valueOf(tcl.getCommonNodeDataAverage()));
        setCommonNodeDeviationTextField(String.valueOf(tcl.getCommonNodeDataDeviation()));
        setCommonNodeMaxDataTextField(String.valueOf(tcl.getCommonNodeMaximumData()));
   }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel averageDataLabel;
    private javax.swing.JComboBox commonNodeApplicationComboBox;
    private javax.swing.JLabel commonNodeApplicationLabel;
    private javax.swing.JLabel commonNodeApplicationLabel1;
    private javax.swing.JLabel commonNodeDissIntervalLabel;
    private javax.swing.JLabel commonNodeDissIntervalLabel1;
    private javax.swing.JTextField commonNodeDissIntervalTextField;
    private javax.swing.JComboBox commonNodeDissTypeComboBox;
    private javax.swing.JLabel commonNodeDissTypeLabel;
    private javax.swing.JLabel commonNodeDissTypeLabel1;
    private javax.swing.JLabel commonNodeEnergyLabel;
    private javax.swing.JTextField commonNodeEnergyTextField;
    private javax.swing.JComboBox commonNodeLocationComboBox;
    private javax.swing.JLabel commonNodeLocationLabel;
    private javax.swing.JLabel commonNodeNumberLabel;
    private javax.swing.JTextField commonNodeNumberTextField;
    private javax.swing.JComboBox commonNodeProcessingTypeComboBox;
    private javax.swing.JTextField commonNodeSensingIntervalTextField;
    private javax.swing.JComboBox commonNodeSensingTypeComboBox;
    private javax.swing.JLabel commonNodeTransmissionRangeLabel;
    private javax.swing.JTextField commonNodeTransmissionRangeTextField;
    private javax.swing.JTextField dataAverageTextField;
    private javax.swing.JComboBox dataGeneratorTypeComboBox;
    private javax.swing.JLabel dataGeneratorTypeLabel;
    private javax.swing.JLabel deviationLabel;
    private javax.swing.JTextField deviationTextField;
    private javax.swing.JLabel joulesLabel;
    private javax.swing.JLabel maxDataLabel;
    private javax.swing.JTextField maxDataTextField;
    private javax.swing.JLabel metersLabel;
    private javax.swing.JLabel secondsLabel;
    private javax.swing.JLabel secondsLabel1;
    // End of variables declaration//GEN-END:variables

}